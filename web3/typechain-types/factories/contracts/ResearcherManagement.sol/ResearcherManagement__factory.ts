/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ResearcherManagement,
  ResearcherManagementInterface,
} from "../../../contracts/ResearcherManagement.sol/ResearcherManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_patientDataContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "researcher",
        type: "address",
      },
    ],
    name: "AccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "researcher",
        type: "address",
      },
    ],
    name: "AccessRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "researcher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "institution",
        type: "string",
      },
    ],
    name: "ResearcherRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "researcher",
        type: "address",
      },
    ],
    name: "ResearcherVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patientDataContract",
    outputs: [
      {
        internalType: "contract IPatientDataManagement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_institution",
        type: "string",
      },
    ],
    name: "registerResearcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredResearchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "researchers",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "institution",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_researcher",
        type: "address",
      },
    ],
    name: "verifyResearcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewAnonymizedData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200164138038062001641833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b6114d6806200016b6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806373fd653d1161006657806373fd653d14610120578063884379011461013c578063de4e0b2f1461015a578063eb2f481714610178578063f851a4401461018257610093565b806301bc237d14610098578063228d3ac7146100ca5780633af7c5fa146100fa5780634e4c7d9b14610116575b600080fd5b6100b260048036038101906100ad9190610b51565b6101a0565b6040516100c193929190610c29565b60405180910390f35b6100e460048036038101906100df9190610b51565b6102e7565b6040516100f19190610c6e565b60405180910390f35b610114600480360381019061010f9190610dbe565b610307565b005b61011e6104ec565b005b61013a60048036038101906101359190610b51565b61064d565b005b610144610808565b6040516101519190610e36565b60405180910390f35b610162610934565b60405161016f9190610eb7565b60405180910390f35b61018061095a565b005b61018a610abb565b6040516101979190610ee1565b60405180910390f35b60026020528060005260406000206000915090508060000180546101c390610f2b565b80601f01602080910402602001604051908101604052809291908181526020018280546101ef90610f2b565b801561023c5780601f106102115761010080835404028352916020019161023c565b820191906000526020600020905b81548152906001019060200180831161021f57829003601f168201915b50505050509080600101805461025190610f2b565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610f2b565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60036020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b90610fa8565b60405180910390fd5b604051806060016040528083815260200182815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816104069190611174565b50602082015181600101908161041c9190611174565b5060408201518160020160006101000a81548160ff0219169083151502179055509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f2f0a9268cd645aeab901e327b054361a5beff93727092980d07f1bc28ace26c783836040516104e0929190611246565b60405180910390a25050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661057b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610572906112c9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166326d93b23336040518263ffffffff1660e01b81526004016105d69190610ee1565b600060405180830381600087803b1580156105f057600080fd5b505af1158015610604573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f1b9b72fde9da721e70e6aca3b0cf4cbe73e82765ef1f280157740376531bfdd860405160405180910390a2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d29061135b565b60405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e906113c7565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167ff89ef2d5d537a2764cdc3d2319c0320feb008480d7b24c76e4ac853c8bac67e860405160405180910390a250565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610899576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610890906112c9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663609e7a356040518163ffffffff1660e01b8152600401600060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061092f9190611457565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e0906112c9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a715d501336040518263ffffffff1660e01b8152600401610a449190610ee1565b600060405180830381600087803b158015610a5e57600080fd5b505af1158015610a72573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fdeb5c31899474fe8c086c95ff9344480d19365676a6a1d22d37bb8e3e7c0ef1860405160405180910390a2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1e82610af3565b9050919050565b610b2e81610b13565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610ae9565b5b6000610b7584828501610b3c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bb8578082015181840152602081019050610b9d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610be082610b7e565b610bea8185610b89565b9350610bfa818560208601610b9a565b610c0381610bc4565b840191505092915050565b60008115159050919050565b610c2381610c0e565b82525050565b60006060820190508181036000830152610c438186610bd5565b90508181036020830152610c578185610bd5565b9050610c666040830184610c1a565b949350505050565b6000602082019050610c836000830184610c1a565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ccb82610bc4565b810181811067ffffffffffffffff82111715610cea57610ce9610c93565b5b80604052505050565b6000610cfd610adf565b9050610d098282610cc2565b919050565b600067ffffffffffffffff821115610d2957610d28610c93565b5b610d3282610bc4565b9050602081019050919050565b82818337600083830152505050565b6000610d61610d5c84610d0e565b610cf3565b905082815260208101848484011115610d7d57610d7c610c8e565b5b610d88848285610d3f565b509392505050565b600082601f830112610da557610da4610c89565b5b8135610db5848260208601610d4e565b91505092915050565b60008060408385031215610dd557610dd4610ae9565b5b600083013567ffffffffffffffff811115610df357610df2610aee565b5b610dff85828601610d90565b925050602083013567ffffffffffffffff811115610e2057610e1f610aee565b5b610e2c85828601610d90565b9150509250929050565b60006020820190508181036000830152610e508184610bd5565b905092915050565b6000819050919050565b6000610e7d610e78610e7384610af3565b610e58565b610af3565b9050919050565b6000610e8f82610e62565b9050919050565b6000610ea182610e84565b9050919050565b610eb181610e96565b82525050565b6000602082019050610ecc6000830184610ea8565b92915050565b610edb81610b13565b82525050565b6000602082019050610ef66000830184610ed2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f4357607f821691505b602082108103610f5657610f55610efc565b5b50919050565b7f5265736561726368657220616c72656164792072656769737465726564000000600082015250565b6000610f92601d83610b89565b9150610f9d82610f5c565b602082019050919050565b60006020820190508181036000830152610fc181610f85565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261102a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fed565b6110348683610fed565b95508019841693508086168417925050509392505050565b6000819050919050565b600061107161106c6110678461104c565b610e58565b61104c565b9050919050565b6000819050919050565b61108b83611056565b61109f61109782611078565b848454610ffa565b825550505050565b600090565b6110b46110a7565b6110bf818484611082565b505050565b5b818110156110e3576110d86000826110ac565b6001810190506110c5565b5050565b601f821115611128576110f981610fc8565b61110284610fdd565b81016020851015611111578190505b61112561111d85610fdd565b8301826110c4565b50505b505050565b600082821c905092915050565b600061114b6000198460080261112d565b1980831691505092915050565b6000611164838361113a565b9150826002028217905092915050565b61117d82610b7e565b67ffffffffffffffff81111561119657611195610c93565b5b6111a08254610f2b565b6111ab8282856110e7565b600060209050601f8311600181146111de57600084156111cc578287015190505b6111d68582611158565b86555061123e565b601f1984166111ec86610fc8565b60005b82811015611214578489015182556001820191506020850194506020810190506111ef565b86831015611231578489015161122d601f89168261113a565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526112608185610bd5565b905081810360208301526112748184610bd5565b90509392505050565b7f52657365617263686572206973206e6f74207665726966696564000000000000600082015250565b60006112b3601a83610b89565b91506112be8261127d565b602082019050919050565b600060208201905081810360008301526112e2816112a6565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611345602283610b89565b9150611350826112e9565b604082019050919050565b6000602082019050818103600083015261137481611338565b9050919050565b7f52657365617263686572206973206e6f74207265676973746572656400000000600082015250565b60006113b1601c83610b89565b91506113bc8261137b565b602082019050919050565b600060208201905081810360008301526113e0816113a4565b9050919050565b60006113fa6113f584610d0e565b610cf3565b90508281526020810184848401111561141657611415610c8e565b5b611421848285610b9a565b509392505050565b600082601f83011261143e5761143d610c89565b5b815161144e8482602086016113e7565b91505092915050565b60006020828403121561146d5761146c610ae9565b5b600082015167ffffffffffffffff81111561148b5761148a610aee565b5b61149784828501611429565b9150509291505056fea2646970667358221220d2e65ce18166a52419cd763130d1c155f699fe5dfad3d2dec0806b4b1055376b64736f6c63430008170033";

type ResearcherManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResearcherManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResearcherManagement__factory extends ContractFactory {
  constructor(...args: ResearcherManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _patientDataContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_patientDataContract, overrides || {});
  }
  override deploy(
    _patientDataContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_patientDataContract, overrides || {}) as Promise<
      ResearcherManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ResearcherManagement__factory {
    return super.connect(runner) as ResearcherManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResearcherManagementInterface {
    return new Interface(_abi) as ResearcherManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResearcherManagement {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ResearcherManagement;
  }
}
