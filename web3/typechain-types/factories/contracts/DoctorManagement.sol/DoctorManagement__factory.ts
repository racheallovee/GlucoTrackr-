/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DoctorManagement,
  DoctorManagementInterface,
} from "../../../contracts/DoctorManagement.sol/DoctorManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_patientDataContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "AccessRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "AccessRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specialization",
        type: "string",
      },
    ],
    name: "DoctorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "DoctorVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "doctors",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "specialization",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "patientDataContract",
    outputs: [
      {
        internalType: "contract IPatientDataManagement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_specialization",
        type: "string",
      },
    ],
    name: "registerDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredDoctors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patient",
        type: "address",
      },
    ],
    name: "requestAccessToPatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patient",
        type: "address",
      },
    ],
    name: "revokeAccessFromPatient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_doctor",
        type: "address",
      },
    ],
    name: "verifyDoctor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patient",
        type: "address",
      },
    ],
    name: "viewPatientRecord",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016e1380380620016e1833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611576806200016b6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b957e46311610066578063b957e46314610146578063c7ab20e514610162578063d80cb05c1461017e578063de4e0b2f1461019a578063f851a440146101b857610093565b806321b0dcd6146100985780633f308cd2146100c8578063833b46bb146100f8578063a9583c2214610114575b600080fd5b6100b260048036038101906100ad9190610bc8565b6101d6565b6040516100bf9190610c85565b60405180910390f35b6100e260048036038101906100dd9190610bc8565b61030f565b6040516100ef9190610cc2565b60405180910390f35b610112600480360381019061010d9190610e12565b61032f565b005b61012e60048036038101906101299190610bc8565b610514565b60405161013d93929190610e8a565b60405180910390f35b610160600480360381019061015b9190610bc8565b61065b565b005b61017c60048036038101906101779190610bc8565b6107d6565b005b61019860048036038101906101939190610bc8565b610951565b005b6101a2610b0c565b6040516101af9190610f2e565b60405180910390f35b6101c0610b32565b6040516101cd9190610f58565b60405180910390f35b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610fbf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318607174836040518263ffffffff1660e01b81526004016102c29190610f58565b600060405180830381865afa1580156102df573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610308919061104f565b9050919050565b60036020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b3906110e4565b60405180910390fd5b604051806060016040528083815260200182815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161042e9190611310565b5060208201518160010190816104449190611310565b5060408201518160020160006101000a81548160ff0219169083151502179055509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fbc3a5b2aeb1bc52e3d56d3fd3423dd66cea5ecff8ae1f3bd0d75a0e608da7b8583836040516105089291906113e2565b60405180910390a25050565b600260205280600052604060002060009150905080600001805461053790611133565b80601f016020809104026020016040519081016040528092919081815260200182805461056390611133565b80156105b05780601f10610585576101008083540402835291602001916105b0565b820191906000526020600020905b81548152906001019060200180831161059357829003601f168201915b5050505050908060010180546105c590611133565b80601f01602080910402602001604051908101604052809291908181526020018280546105f190611133565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190610fbf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5e00b1033836040518363ffffffff1660e01b8152600401610747929190611419565b600060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f825c8be24eb0df19500f63e86c29e7d0d951e73056b889b891d85e40938d9b6e60405160405180910390a350565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c90610fbf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636550aa5333836040518363ffffffff1660e01b81526004016108c2929190611419565b600060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f40c7749b16fdfb0d550f20273a7767875059d647af94f5a9610c63ad73dcc79f60405160405180910390a350565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d6906114b4565b60405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611520565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fb0859f2cf042b300c8948cdd785ec6a23a3742bc5446c19f4b270b67fac2c96760405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9582610b6a565b9050919050565b610ba581610b8a565b8114610bb057600080fd5b50565b600081359050610bc281610b9c565b92915050565b600060208284031215610bde57610bdd610b60565b5b6000610bec84828501610bb3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c2f578082015181840152602081019050610c14565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c5782610bf5565b610c618185610c00565b9350610c71818560208601610c11565b610c7a81610c3b565b840191505092915050565b60006020820190508181036000830152610c9f8184610c4c565b905092915050565b60008115159050919050565b610cbc81610ca7565b82525050565b6000602082019050610cd76000830184610cb3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d1f82610c3b565b810181811067ffffffffffffffff82111715610d3e57610d3d610ce7565b5b80604052505050565b6000610d51610b56565b9050610d5d8282610d16565b919050565b600067ffffffffffffffff821115610d7d57610d7c610ce7565b5b610d8682610c3b565b9050602081019050919050565b82818337600083830152505050565b6000610db5610db084610d62565b610d47565b905082815260208101848484011115610dd157610dd0610ce2565b5b610ddc848285610d93565b509392505050565b600082601f830112610df957610df8610cdd565b5b8135610e09848260208601610da2565b91505092915050565b60008060408385031215610e2957610e28610b60565b5b600083013567ffffffffffffffff811115610e4757610e46610b65565b5b610e5385828601610de4565b925050602083013567ffffffffffffffff811115610e7457610e73610b65565b5b610e8085828601610de4565b9150509250929050565b60006060820190508181036000830152610ea48186610c4c565b90508181036020830152610eb88185610c4c565b9050610ec76040830184610cb3565b949350505050565b6000819050919050565b6000610ef4610eef610eea84610b6a565b610ecf565b610b6a565b9050919050565b6000610f0682610ed9565b9050919050565b6000610f1882610efb565b9050919050565b610f2881610f0d565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b610f5281610b8a565b82525050565b6000602082019050610f6d6000830184610f49565b92915050565b7f446f63746f72206973206e6f7420766572696669656400000000000000000000600082015250565b6000610fa9601683610c00565b9150610fb482610f73565b602082019050919050565b60006020820190508181036000830152610fd881610f9c565b9050919050565b6000610ff2610fed84610d62565b610d47565b90508281526020810184848401111561100e5761100d610ce2565b5b611019848285610c11565b509392505050565b600082601f83011261103657611035610cdd565b5b8151611046848260208601610fdf565b91505092915050565b60006020828403121561106557611064610b60565b5b600082015167ffffffffffffffff81111561108357611082610b65565b5b61108f84828501611021565b91505092915050565b7f446f63746f7220616c7265616479207265676973746572656400000000000000600082015250565b60006110ce601983610c00565b91506110d982611098565b602082019050919050565b600060208201905081810360008301526110fd816110c1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114b57607f821691505b60208210810361115e5761115d611104565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611189565b6111d08683611189565b95508019841693508086168417925050509392505050565b6000819050919050565b600061120d611208611203846111e8565b610ecf565b6111e8565b9050919050565b6000819050919050565b611227836111f2565b61123b61123382611214565b848454611196565b825550505050565b600090565b611250611243565b61125b81848461121e565b505050565b5b8181101561127f57611274600082611248565b600181019050611261565b5050565b601f8211156112c45761129581611164565b61129e84611179565b810160208510156112ad578190505b6112c16112b985611179565b830182611260565b50505b505050565b600082821c905092915050565b60006112e7600019846008026112c9565b1980831691505092915050565b600061130083836112d6565b9150826002028217905092915050565b61131982610bf5565b67ffffffffffffffff81111561133257611331610ce7565b5b61133c8254611133565b611347828285611283565b600060209050601f83116001811461137a5760008415611368578287015190505b61137285826112f4565b8655506113da565b601f19841661138886611164565b60005b828110156113b05784890151825560018201915060208501945060208101905061138b565b868310156113cd57848901516113c9601f8916826112d6565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526113fc8185610c4c565b905081810360208301526114108184610c4c565b90509392505050565b600060408201905061142e6000830185610f49565b61143b6020830184610f49565b9392505050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b600061149e602283610c00565b91506114a982611442565b604082019050919050565b600060208201905081810360008301526114cd81611491565b9050919050565b7f446f63746f72206973206e6f7420726567697374657265640000000000000000600082015250565b600061150a601883610c00565b9150611515826114d4565b602082019050919050565b60006020820190508181036000830152611539816114fd565b905091905056fea26469706673582212206a09d46ac90ce193119e372fab31d0a145fc5e3977cf683abe88c17f685b2cf464736f6c63430008170033";

type DoctorManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoctorManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DoctorManagement__factory extends ContractFactory {
  constructor(...args: DoctorManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _patientDataContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_patientDataContract, overrides || {});
  }
  override deploy(
    _patientDataContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_patientDataContract, overrides || {}) as Promise<
      DoctorManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DoctorManagement__factory {
    return super.connect(runner) as DoctorManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoctorManagementInterface {
    return new Interface(_abi) as DoctorManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DoctorManagement {
    return new Contract(address, _abi, runner) as unknown as DoctorManagement;
  }
}
