/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { GetNumber, GetNumberInterface } from "../../contracts/GetNumber";

const _abi = [
  {
    inputs: [],
    name: "getSquare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "num",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610215806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633fb5c1cb146100465780634e70b1dc146100625780638dbbe62514610080575b600080fd5b610060600480360381019061005b91906100d9565b61009e565b005b61006a6100a8565b6040516100779190610115565b60405180910390f35b6100886100ae565b6040516100959190610115565b60405180910390f35b8060008190555050565b60005481565b600080546000546100bf9190610130565b905090565b6000813590506100d3816101c8565b92915050565b6000602082840312156100ef576100ee6101c3565b5b60006100fd848285016100c4565b91505092915050565b61010f8161018a565b82525050565b600060208201905061012a6000830184610106565b92915050565b600061013b8261018a565b91506101468361018a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561017f5761017e610194565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6101d18161018a565b81146101dc57600080fd5b5056fea2646970667358221220d1f11165f3f5ff9a88786c0965cd9ecd4920bf3db0d7d72ba1e5d635f904822164736f6c63430008070033";

type GetNumberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GetNumberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GetNumber__factory extends ContractFactory {
  constructor(...args: GetNumberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GetNumber & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GetNumber__factory {
    return super.connect(runner) as GetNumber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetNumberInterface {
    return new Interface(_abi) as GetNumberInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GetNumber {
    return new Contract(address, _abi, runner) as unknown as GetNumber;
  }
}
