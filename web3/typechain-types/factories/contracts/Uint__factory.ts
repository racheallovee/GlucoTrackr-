/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Uint, UintInterface } from "../../contracts/Uint";

const _abi = [
  {
    inputs: [],
    name: "answer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600a600055600760015534801561001a57600080fd5b506101588061002a6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806385bb7d6914610030575b600080fd5b61003861004e565b6040516100459190610074565b60405180910390f35b6000600154600054610060919061008f565b905090565b61006e816100e9565b82525050565b60006020820190506100896000830184610065565b92915050565b600061009a826100e9565b91506100a5836100e9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156100de576100dd6100f3565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220c6ce44ecb7096da9a8ae40c49ff8275361146ea3aa4e3ddb598f24b2dcc66a0564736f6c63430008070033";

type UintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint__factory extends ContractFactory {
  constructor(...args: UintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Uint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Uint__factory {
    return super.connect(runner) as Uint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UintInterface {
    return new Interface(_abi) as UintInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Uint {
    return new Contract(address, _abi, runner) as unknown as Uint;
  }
}
