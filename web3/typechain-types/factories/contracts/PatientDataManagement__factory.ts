/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PatientDataManagement,
  PatientDataManagementInterface,
} from "../../contracts/PatientDataManagement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isGranted",
        type: "bool",
      },
    ],
    name: "AccessUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "glucoseLevel",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "medicationHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "mealsHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "exerciseHash",
        type: "bytes32",
      },
    ],
    name: "DataLogged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "accessor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isGranted",
        type: "bool",
      },
    ],
    name: "EmergencyAccessUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteHealthData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "getAverageGlucoseLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessor",
        type: "address",
      },
    ],
    name: "grantEmergencyAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_glucoseLevel",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_medicationHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_mealsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_exerciseHash",
        type: "bytes32",
      },
    ],
    name: "logHealthData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessor",
        type: "address",
      },
    ],
    name: "revokeEmergencyAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isGranted",
        type: "bool",
      },
    ],
    name: "updateAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_patient",
        type: "address",
      },
    ],
    name: "viewHealthData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "glucoseLevel",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "medicationHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "mealsHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "exerciseHash",
            type: "bytes32",
          },
        ],
        internalType: "struct PatientDataManagement.HealthData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611502806100616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806373b492ff1161005b57806373b492ff146100ea5780639951664e14610106578063aabc428014610136578063d0ad1398146101525761007d565b806305c17521146100825780630c66f928146100b2578063213156cc146100ce575b600080fd5b61009c60048036038101906100979190610d14565b61016e565b6040516100a99190610e8a565b60405180910390f35b6100cc60048036038101906100c79190610ee4565b610390565b005b6100e860048036038101906100e39190610f7c565b6104fd565b005b61010460048036038101906100ff9190610d14565b610621565b005b610120600480360381019061011b9190610fe3565b61075b565b60405161012d9190611045565b60405180910390f35b610150600480360381019061014b9190610d14565b610a68565b005b61016c60048036038101906101679190611060565b610ba2565b005b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806102305750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b806102845750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba906110ea565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561038557838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610321565b505050509050919050565b333373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f69061117c565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5b273ba4eb5db97af8506cc6e94cd82ed91395089a5c5012479f42b23d8248ee846040516104f091906111ab565b60405180910390a3505050565b60006040518060a001604052804281526020018681526020018581526020018481526020018381525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015550503373ffffffffffffffffffffffffffffffffffffffff167fe3b524e09af637da904f489285231e36fe28049d1739ea6147b9edbb73bfec7842878787876040516106129594939291906111d5565b60405180910390a25050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a89061129a565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f1f3dde93c44f27a9f416923b22c0dcd76b3ef122dbe77b19fc161a9dc0f2f100600060405161075091906111ab565b60405180910390a250565b60003373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061081d5750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61085c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610853906110ea565b60405180910390fd5b60008060005b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610a0d57856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106108fc576108fb6112ba565b5b9060005260206000209060050201600001541015801561097d5750846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610968576109676112ba565b5b90600052602060002090600502016000015411155b15610a00576000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106109d2576109d16112ba565b5b906000526020600020906005020160010154836109ef9190611318565b925081806109fc9061134c565b9250505b8080600101915050610862565b5060008111610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a48906113e0565b60405180910390fd5b8082610a5d919061142f565b925050509392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef9061129a565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f1f3dde93c44f27a9f416923b22c0dcd76b3ef122dbe77b19fc161a9dc0f2f1006001604051610b9791906111ab565b60405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c906114ac565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610c7557610c746112ba565b5b90600052602060002090600502016000808201600090556001820160009055600282016000905560038201600090556004820160009055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce182610cb6565b9050919050565b610cf181610cd6565b8114610cfc57600080fd5b50565b600081359050610d0e81610ce8565b92915050565b600060208284031215610d2a57610d29610cb1565b5b6000610d3884828501610cff565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610d8081610d6d565b82525050565b6000819050919050565b610d9981610d86565b82525050565b60a082016000820151610db56000850182610d77565b506020820151610dc86020850182610d77565b506040820151610ddb6040850182610d90565b506060820151610dee6060850182610d90565b506080820151610e016080850182610d90565b50505050565b6000610e138383610d9f565b60a08301905092915050565b6000602082019050919050565b6000610e3782610d41565b610e418185610d4c565b9350610e4c83610d5d565b8060005b83811015610e7d578151610e648882610e07565b9750610e6f83610e1f565b925050600181019050610e50565b5085935050505092915050565b60006020820190508181036000830152610ea48184610e2c565b905092915050565b60008115159050919050565b610ec181610eac565b8114610ecc57600080fd5b50565b600081359050610ede81610eb8565b92915050565b60008060408385031215610efb57610efa610cb1565b5b6000610f0985828601610cff565b9250506020610f1a85828601610ecf565b9150509250929050565b610f2d81610d6d565b8114610f3857600080fd5b50565b600081359050610f4a81610f24565b92915050565b610f5981610d86565b8114610f6457600080fd5b50565b600081359050610f7681610f50565b92915050565b60008060008060808587031215610f9657610f95610cb1565b5b6000610fa487828801610f3b565b9450506020610fb587828801610f67565b9350506040610fc687828801610f67565b9250506060610fd787828801610f67565b91505092959194509250565b600080600060608486031215610ffc57610ffb610cb1565b5b600061100a86828701610cff565b935050602061101b86828701610f3b565b925050604061102c86828701610f3b565b9150509250925092565b61103f81610d6d565b82525050565b600060208201905061105a6000830184611036565b92915050565b60006020828403121561107657611075610cb1565b5b600061108484828501610f3b565b91505092915050565b600082825260208201905092915050565b7f416363657373206e6f7420617574686f72697a65640000000000000000000000600082015250565b60006110d460158361108d565b91506110df8261109e565b602082019050919050565b60006020820190508181036000830152611103816110c7565b9050919050565b7f4f6e6c79207468652070617469656e742063616e20706572666f726d2074686960008201527f7320616374696f6e000000000000000000000000000000000000000000000000602082015250565b600061116660288361108d565b91506111718261110a565b604082019050919050565b6000602082019050818103600083015261119581611159565b9050919050565b6111a581610eac565b82525050565b60006020820190506111c0600083018461119c565b92915050565b6111cf81610d86565b82525050565b600060a0820190506111ea6000830188611036565b6111f76020830187611036565b61120460408301866111c6565b61121160608301856111c6565b61121e60808301846111c6565b9695505050505050565b7f4f6e6c7920746865206f776e65722063616e20706572666f726d20746869732060008201527f616374696f6e0000000000000000000000000000000000000000000000000000602082015250565b600061128460268361108d565b915061128f82611228565b604082019050919050565b600060208201905081810360008301526112b381611277565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132382610d6d565b915061132e83610d6d565b9250828201905080821115611346576113456112e9565b5b92915050565b600061135782610d6d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611389576113886112e9565b5b600182019050919050565b7f4e6f206461746120696e20746865207370656369666965642072616e67650000600082015250565b60006113ca601e8361108d565b91506113d582611394565b602082019050919050565b600060208201905081810360008301526113f9816113bd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061143a82610d6d565b915061144583610d6d565b92508261145557611454611400565b5b828204905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000611496600d8361108d565b91506114a182611460565b602082019050919050565b600060208201905081810360008301526114c581611489565b905091905056fea26469706673582212203f6823ae9b44d08f8ba7f69a3127013fad44f3df344796d1053b0e0352be7df464736f6c63430008170033";

type PatientDataManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PatientDataManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PatientDataManagement__factory extends ContractFactory {
  constructor(...args: PatientDataManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PatientDataManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PatientDataManagement__factory {
    return super.connect(runner) as PatientDataManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PatientDataManagementInterface {
    return new Interface(_abi) as PatientDataManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PatientDataManagement {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PatientDataManagement;
  }
}
