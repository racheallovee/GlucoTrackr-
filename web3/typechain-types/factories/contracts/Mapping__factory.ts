/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Mapping, MappingInterface } from "../../contracts/Mapping";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806327e235e314610046578063e30443bc14610076578063f8b2cb4f14610092575b600080fd5b610060600480360381019061005b9190610193565b6100c2565b60405161006d919061020f565b60405180910390f35b610090600480360381019061008b91906101c0565b6100da565b005b6100ac60048036038101906100a79190610193565b610121565b6040516100b9919061020f565b60405180910390f35b60006020528060005260406000206000915090505481565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000813590506101788161026b565b92915050565b60008135905061018d81610282565b92915050565b6000602082840312156101a9576101a8610266565b5b60006101b784828501610169565b91505092915050565b600080604083850312156101d7576101d6610266565b5b60006101e585828601610169565b92505060206101f68582860161017e565b9150509250929050565b6102098161025c565b82525050565b60006020820190506102246000830184610200565b92915050565b60006102358261023c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6102748161022a565b811461027f57600080fd5b50565b61028b8161025c565b811461029657600080fd5b5056fea2646970667358221220362e6b0c8c74e14232168f690d5d2050786f1192f6ab7786786fef8c6e69e38664736f6c63430008070033";

type MappingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MappingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mapping__factory extends ContractFactory {
  constructor(...args: MappingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Mapping & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mapping__factory {
    return super.connect(runner) as Mapping__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MappingInterface {
    return new Interface(_abi) as MappingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mapping {
    return new Contract(address, _abi, runner) as unknown as Mapping;
  }
}
